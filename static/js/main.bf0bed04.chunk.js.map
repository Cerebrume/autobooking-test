{"version":3,"sources":["hooks/useFetch.js","api/lib.js","api/fetchTerms.js","api/fetchStyles.js","api/fetchBrandsTerms.js","App.js","index.js"],"names":["useFetch","fetchFunction","useState","result","setTerms","useEffect","a","response","fetchRequest","http","endpoint","fetch","fetchTerms","json","data","fetchStyles","fetchBrandsTerms","renderSelect","array","onChange","slug","index","indexOf","selectedSlug","slice","selectedItem","find","item","toLowerCase","selectValue","id","value","map","arrayItem","key","label","defaultValue","AppWithRouter","withRouter","props","terms","brands","style","urlObject","setUrlObject","pathArray","location","pathname","split","length","getUrlParam","brandsTerms","styles","onSelectTerms","useCallback","e","selectedTerm","term","target","onSelectBrands","selectedBrand","brand","onSelectStyles","selectedStyle","isLoading","className","to","Core","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf0bed04.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = fetchFunction => {\r\n  const [result, setTerms] = useState([]);\r\n  useEffect(() => {\r\n    const fetchRequest = async () => {\r\n      const response = await fetchFunction();\r\n      setTerms(response);\r\n    };\r\n    fetchRequest();\r\n  }, []);\r\n  return result;\r\n};\r\n","const http = async endpoint => {\r\n  const BESE_URL = \"https://beta.autobooking.com/api/test/v1\";\r\n  return fetch(`${BESE_URL}${endpoint}`);\r\n};\r\n\r\nexport default http;\r\n","import http from \"./lib\";\r\n\r\nexport const fetchTerms = async () => {\r\n  const response = await http(\"/search/terms\");\r\n  const { data } = await response.json()\r\n  return data;\r\n};\r\n","import http from \"./lib\";\r\n\r\nexport const fetchStyles = async () => {\r\n  const response = await http(\"/search/styles\");\r\n  const { data } = await response.json()\r\n  return data;\r\n};\r\n","import http from \"./lib\";\r\n\r\nexport const fetchBrandsTerms = async () => {\r\n  const response = await http(\"/search/brands_terms\");\r\n  const { data } = await response.json()\r\n  return data;\r\n};\r\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\nimport { useFetch } from \"./hooks\";\nimport { fetchTerms, fetchBrandsTerms, fetchStyles } from \"./api\";\n\nimport \"./App.css\";\n\nconst renderSelect = (array, onChange, slug = \"\") => {\n  if (slug) {\n    const index = slug.indexOf(\"-\");\n    const selectedSlug = slug.slice(index + 1);\n    const selectedItem = array.find(\n      item => item.slug.toLowerCase() === selectedSlug\n    );\n    const selectValue = (selectedItem && selectedItem.id) || \"select\";\n    return (\n      <select value={selectValue} onChange={onChange}>\n        <option value=\"select\">Select</option>\n        {array.map(arrayItem => (\n          <option key={arrayItem.id} value={arrayItem.id}>\n            {arrayItem.label}\n          </option>\n        ))}\n      </select>\n    );\n  }\n\n  return (\n    <select defaultValue=\"select\" onChange={onChange}>\n      <option value=\"select\">Select</option>\n      {array.map(arrayItem => (\n        <option key={arrayItem.id} value={arrayItem.id}>\n          {arrayItem.label}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nfunction App(props) {\n  const [urlObject, setUrlObject] = useState({\n    terms: \"\",\n    brands: \"\",\n    style: \"\"\n  });\n  useEffect(() => {\n    const pathArray = props.location.pathname.split(\"/\");\n    if (pathArray[1].length === 0) return;\n    const getUrlParam = value => (value && value.length > 1 ? `/${value}` : \"\");\n    const terms = getUrlParam(pathArray[1]);\n\n    const brands = getUrlParam(pathArray[2]);\n    const style = getUrlParam(pathArray[3]);\n    setUrlObject({\n      terms,\n      brands,\n      style\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.location.pathname]);\n  const terms = useFetch(fetchTerms);\n  const brandsTerms = useFetch(fetchBrandsTerms);\n  const styles = useFetch(fetchStyles);\n  const onSelectTerms = useCallback(\n    e => {\n      const selectedTerm = terms.find(term => {\n        return term.id == e.target.value;\n      });\n      if (selectedTerm) {\n        setUrlObject({\n          ...urlObject,\n          terms: `/s-${selectedTerm.slug}`\n        });\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [terms]\n  );\n  const onSelectBrands = useCallback(\n    e => {\n      const selectedBrand = brandsTerms.find(brand => {\n        return brand.id == e.target.value;\n      });\n      if (selectedBrand) {\n        setUrlObject({\n          ...urlObject,\n          brands: `/b-${selectedBrand.slug}`\n        });\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [brandsTerms]\n  );\n  const onSelectStyles = useCallback(\n    e => {\n      const selectedStyle = styles.find(style => {\n        return style.id == e.target.value;\n      });\n      if (selectedStyle) {\n        setUrlObject({\n          ...urlObject,\n          style: `/st-${selectedStyle.slug}`\n        });\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [styles]\n  );\n  const isLoading =\n    terms.length > 0 && brandsTerms.length > 0 && styles.length > 0;\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">Autobooking test</header>\n        <main className=\"App-main\">\n          {isLoading ? (\n            <div>\n              {renderSelect(terms, onSelectTerms, urlObject.terms)}\n              {renderSelect(brandsTerms, onSelectBrands, urlObject.brands)}\n              {renderSelect(styles, onSelectStyles, urlObject.style)}\n            </div>\n          ) : 'Loading..., please wait'}\n        </main>\n        <Redirect\n          to={`${urlObject.terms}${urlObject.brands}${urlObject.style}`}\n        />\n      </div>\n    </Router>\n  );\n}\n\nconst AppWithRouter = withRouter(App);\n\nconst Core = () => (\n  <Router>\n    <AppWithRouter />\n  </Router>\n);\n\nexport default Core;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}